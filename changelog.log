Server Changelog:

Initial:
Installed Ubuntu Server 15.10 with no packages

12/8/2015 ?:?? AM

Installed SSH:
sudo apt-get install ssh -y
Changed default ssh port so i could access outside: {optional can just add under instead of replace}
sudo nano /etc/ssh/sshd_config
Port ???
Restarted SSH Service
sudo systemctl restart ssh

12/8/2015 ?:?? AM

Synced DirtyCajunRice's GitHub scripts repository:
sudo git clone https://github.com/DirtyCajunRice/scripts.git ~

12/8/2015 ?:?? AM

Installed Samba
sudo apt-get install samba
Set passwords for any and all users:
sudo smbpasswd -a (user_name) #e.g. sudo smbpasswd -a nick
create share folder: (repeat for all shared folders / -m is to allow the file permission argument 777)
mkdir -m 777 ~/testshare #or wherever else you want to keep them all organized.
copied the original samba configuration file to the home directory just in case:
sudo cp /etc/samba/smb.conf ~/smb_original.conf
added all of the share directories for the previously made shared folders: 
(copy template out of smb_example.conf in ~/scripts and add to bottom without touching other settings for now)
Restarted Samba:
sudo service smbd restart
Test to see if files are available!!!

12/8/2015 ?:?? AM

Grabbed PlexMediaServer from the website: (get link from website)
wget https://downloads.plex.tv/plex-media-server/0.9.14.4.1556-a10e3c2/plexmediaserver_0.9.14.4.1556-a10e3c2_amd64.deb
Installed PlexMediaServer: (astrick is so you dont have to type it all in and -i is install)
sudo dpkg -i plexmediaserver*
To access: (or correct internal/external address)
http://127.0.0.1:32400/web 
Added group apps:
sudo addgroup --system apps
add user plex to apps group:
sudo usermod -a -G apps plex

12/9/2015 3:00 PM

Installed SickGear Dependencies: (with auto yes)
sudo apt-get install python-cheetah unrar-free git -y
Cloned SickGear github repository:
sudo git clone https://github.com/SickGear/SickGear.git /opt/SickGear
Added SickGear User: (no password / system user / home directory / no fuckin idea / what group the user is in / name of user)
sudo adduser --disabled-password --system --home /var/lib/sickgear --gecos "SickGear" --ingroup apps sickgear
Changed owner of /opt/SickGear to sickgear: (recursively)
sudo chown sickgear -R /opt/SickGear
Tested SickGear:
sudo -u sickgear python /opt/SickGear/SickBeard.py
checked that it was active:
192.168.1.34:8081
Copied SickGear systemd script from ~/scripts to systemd start script folder:
sudo cp ~/scripts/sickgear.service /etc/systemd/system/sickgear.service
Enabled the SickGear systemd script:
sudo systemctl enable sickrage.service
Rebooted:
sudo reboot

12/9/2015 3:49 PM

Created user deluge and put in system user and group apps.
sudo adduser --disabled-password --system --home /var/lib/deluge --gecos "Deluge Server" --ingroup apps deluge
Created logs and changed owner to deluge:
sudo touch /var/log/deluged.log
sudo touch /var/log/deluge-web.log
sudo chown deluge:apps /var/log/deluge*
Installed the Daemon:
sudo apt-get install deluged
Installed the WebUI:
sudo apt-get install deluge-webui
Copied deluged systemd script from ~/scripts to systemd start script
folder:
sudo cp ~/scripts/deluged.service /etc/systemd/system/deluged.service
Started deluged service, verified it was running, and enabled it to start on boot:
sudo systemctl start deluged
sudo systemctl status deluged
sudo systemctl enable deluged
Copied deluged systemd script from ~/scripts to systemd start script
folder:
sudo cp ~/scripts/deluge-web.service /etc/systemd/system/deluge-web.service
Started deluged service, verified it was running, and enabled it to start on boot:
sudo systemctl start deluge-web
sudo systemctl status deluge-web
sudo systemctl enable deluge-web
Created a log directory for Deluge and gave deluge full access:
sudo mkdir -p /var/log/deluge
sudo chown -R deluge:apps /var/log/deluge
sudo chmod -R 750 /var/log/deluge
Added new Authorization to auth file to allow thin client to work: (had to change some permissions)
cd /var/lib/deluge
sudo chmod -R 755 .config
sudo nano .config/deluge/auth
add username:password:10
Restarted server:
sudo reboot
http://localhost:8112/

12/9/2015 6:50 PM

Cloned CouchPotatoServer github repository:
sudo git clone https://github.com/RuudBurger/CouchPotatoServer.git /opt/CouchPotatoServer
Tesed to make sure it was working:
python /opt/CouchPotatoServer/CouchPotato.py
http://localhost:5050/
Copy CouchPotatoServer systemd script from ~/scripts to systemd folder:
sudo cp ~/scripts/couchpotato.service /etc/systemd/system/couchpotato.service
Created user couchpotato and put in system user and group apps:
sudo adduser --disabled-password --system --home /var/lib/couchpotato --gecos "CouchPotato Server" --ingroup apps couchpotato
Changed Ownership of CouchPotatoServer folder
sudo chown couchpotato -R /opt/CouchPotatoServer
Started couchpotato service, verified it was running, and enabled it to start on boot:
sudo systemctl start couchpotato
sudo systemctl status couchpotato
sudo systemctl enable couchpotato
Rebooted System
sudo reboot

12/9/2015 7:12 PM

Installed Apache Web Server:
sudo apt-get install apache2
(done. wasnt that easy!?)

12/9/2015 9:25 PM

download teamspeak server and ssh it to your server.
extract the .tar:
tar xzf teams*
Create teamspeak user and put in system users:
sudo adduser --disabled-password --system --home /var/lib/teamspeak --gecos "Teamspeak Server" --group teamspeak
Moved all the files to opt folder:
sudo mv teamspeak3-server_linux-amd64 /opt/Teamspeak
Changed Ownership of Teamspeak folder
sudo chown -R teamspeak /opt/Teamspeak
Copy Teamspeak systemd script from ~/scripts to systemd folder:
sudo cp ~/scripts/teamspeak.service /etc/systemd/system/teamspeak.service
Copy Teamspeak ini file from ~/scripts folder to working directory:
sudo cp ~/scripts/ts3server.ini /opt/Teamspeak/ts3server.ini
Tested server and started to get Query account and admin token:
sudo /opt/Teamspeak/ts3server_startscript.sh start
Started teamspeak service, verified it was running, and enabled it to start on boot:
sudo systemctl start teamspeak
sudo systemctl status teamspeak
sudo systemctl enable teamspeak
Reboot system
sudo reboot

12/11/2015 3:07 AM

wanted to try out sonarr so i got the repository then downloaded sonarr:   (Side note sonarr shits on sickanything)
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys FDA5DFFC
echo "deb http://apt.sonarr.tv/ master main" | sudo tee /etc/apt/sources.list.d/sonarr.list
sudo apt-get install nzbdrone 
started sonarr:
mono --debug /opt/NzbDrone/NzbDrone.exe
tested to make sure it was running:
http://localhost:8989
sudo adduser --disabled-password --system --home /var/lib/sonarr --gecos "Sonarr" --ingroup apps sonarr
Copy sonarr systemd script from ~/scripts to systemd folder:
sudo cp ~/scripts/sonarr.service /etc/systemd/system/sonarr.service
Started sonarr service, verified it was running, and enabled it to start on boot:
sudo systemctl start sonarr
sudo systemctl status sonarr
sudo systemctl enable sonarr
Reboot system
sudo reboot
