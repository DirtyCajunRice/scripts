#!/bin/bash

source variables.conf
comploc='/dir/torrents/completed'

# Before running filebot check to see if there are any filetypes that arent extension X,
# if so delete the files recursively then delete the folders recursively
if [[ $(find "$comploc" -type f ! \( -iname "*.r*" -o -iname "*.mkv" -o -iname "*.srt*" -o -iname "*.mp4" \
                                     -o -iname "*.avi" -o -iname "*.m2ts" -o -iname "*.m4v"  \)) ]]; then
    echo "Deleting these files/folders pre-processing:"
    find "$comploc" -type f ! \( -iname "*.r*" -o -iname "*.mkv" -o -iname "*.srt*" -o -iname "*.mp4" \
                                 -o -iname "*.avi" -o -iname "*.m2ts" -o -iname "*.m4v" \) -print -delete
    find /movies2 "$comploc" \( -iname "*sample*" -o -iname "*trailer*" \) -type f -print -delete
    find /movies2 "$comploc" -mindepth 1 -type d -empty -print -delete
elif [[ $(find /movies2 "$comploc" -mindepth 1 -type d -empty) ]]; then
    echo "Deleting these folders pre-processing:"
    find /movies2 "$comploc" -mindepth 1 -type d -empty -print -delete
else
    echo "No files/folders to delete pre-processing"
fi

# Count total number of folders pre-processing
preprocfolders=$(ls $comploc | wc -l)

# Run filebot finding movies with TheMovieDB, recursively, Extracting, Moving to X, Renaming by template,
# and stating all to a log file.
if [[ $(filebot -r -mediainfo --db TheMovieDB "$comploc") ]]; then
    filebot -r --output /movies2 -rename "$comploc" --db TheMovieDB -extract --action move \
            --log-file /var/log/moviemove.log --format "{n} ({y})({vf})/{n} ({y})({vf})"
else
    echo "There are no processable movie files"
fi

# Count total number of folders pre-processing
postprocfolders=$(ls $comploc | wc -l)

# After running filebot clean up all files that are extension X deleting the files first then folders recursively
if [[ $preprocfolders == $postprocfolders ]]; then
    if [[ $(find /movies2 "$comploc" -type f ! \( -iname "*.mkv" -o -iname "*.mp4" -o -iname "*.avi" \
                                                  -o -iname "*.m2ts" -o -iname "*.srt"  -o -iname "*.m4v" \)) ]]; then
        echo "Deleting thise files/folders post-processing:"
        find /movies2 "$comploc" -type f ! \( -iname "*.mkv" -o -iname "*.mp4" -o -iname "*.avi" -o -iname "*.m2ts" -o \
                                              -iname "*.srt"  -o -iname "*.m4v" \) -print -delete
        find /movies2 "$comploc" -mindepth 1 -type d -empty -print -delete
    elif [[ $(find /movies /movies2 "$comploc" -mindepth 1 -type d -empty) ]]; then
        echo "Deleting thise folders post-processing:"
        find /movies2 "$comploc" -mindepth 1 -type d -empty -print -delete
    else
        echo "No files/folders to delete post-processing"
    fi
else
    echo "There were $preprocfolders folders in $comploc pre-processing"
    echo "but there are $postprocfolders folders after... not deleting anything post-processing"
fi
# Check to see if directories/files have appropriate permissions if not change to apps and 774 664 respectively
if [[ $(find /movies2 -type d \( ! -group apps -o ! -perm 774 \)) ]]; then
    echo "Changing these directories to Group:apps and Permissions:774"
    find /movies2 -type d \( ! -group apps -o ! -perm 774 \) -print -exec chmod 774 {} + -exec chgrp apps {} +
else
    echo "All directory permissions correct"
fi

if [[ $(find /movies2 -type f \( ! -group apps -o ! -perm 664 \)) ]]; then
    echo "Changing these files to Group:apps and Permissions:664"
    find /movies2 -type f \( ! -group apps -o ! -perm 664 \) -print -exec chmod 664 {} + -exec chgrp apps {} +
else
    echo "All file permissions correct"
fi

echo  "Updating Plex Movie Database"
curl http://10.0.10.100:32400/library/sections/1/refresh?X-Plex-Token="$plextoken"
